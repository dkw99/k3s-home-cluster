---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home-automation
spec:
  interval: 10m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: home-assistant
      version: 12.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    image:
      repository: homeassistant/home-assistant
      tag: 2022.4.4
    env:
      TZ: ${TIMEZONE}
    hostNetwork: true
    dnsPolicy: ClusterFirstWithHostNet
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${HASS_IP}
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          external-dns.alpha.kubernetes.io/target: ${SECRET_DOMAIN}
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/enable: "true"
          hajimari.io/icon: home-assistant
        hosts:
          - host: hass.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - hass.${SECRET_DOMAIN}
            secretName: hass-tls
    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config
    addons:
      codeserver:
        enabled: true
        image:
          repository: codercom/code-server
          tag: 4.0.2
        workingDir: /config
        args:
          - --auth
          - none
          - --user-data-dir
          - /config/.vscode
          - --extensions-dir
          - /config/.vscode
        env:
          HASS_SERVER: http://localhost:8123
          HASS_TOKEN: ${HASS_TOKEN}
        git:
          deployKeySecret: home-assistant-code-server
        ingress:
          ingressClassName: "nginx"
          enabled: true
          annotations:
            external-dns.alpha.kubernetes.io/target: ${SECRET_DOMAIN}
            cert-manager.io/cluster-issuer: letsencrypt-production
            # nginx.ingress.kubernetes.io/auth-url: https://auth.${SECRET_DOMAIN}/oauth2/auth
            # nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
          hosts:
            - host: hass-config.${SECRET_DOMAIN}
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - hass-config.${SECRET_DOMAIN}
              secretName: hass-config-tls
        volumeMounts:
          - name: config
            mountPath: /config
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        memory: 2Gi
